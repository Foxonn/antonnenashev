# Project template
- layout: top-middle
  name: ytgrabber
  github: https://github.com/Foxonn/ytgrabber/tree/develop
  quote: >
    Python • Selenium webdriver • Regex • Git • pytube
  description: | # this will include new lines to allow paragraphs
    Приложение разрабатывал для себя, под свои нужды.

    Цель проекта, разработка приложение которое скачивает аудио-дорожки из видео материала с YT на ПК и конвертирует их в mp3.

    Приложение состоит из трех основных модулей:
    * grabber отвечает за парсинг данных, принимает ссылку на плейлист или на вкладку видео.
    * downloader отвечает за загрузку  файлов на ПК.
    * converter отвечает за конвертацию загруженных файлов в mp3 формат

    Для удобства отладки реализованы собственные классы исключений.

- layout: top-middle
  name: readitblog
  github: https://github.com/Foxonn/readitblog/
  quote: >
    Rabbitmq • Celery • Docker • Nginx • Uwsgi • PostgreSQL • Django • Python • Git
  description: | # this will include new lines to allow paragraphs
    Первый проект на Django 3.0, для тренировки.

    Проект имеет несколько основных приложений: blog, readitcomments, readittags.

    Приложение blog. Управляет постами, и категориями постов. Посты могут быть как в категории, так и без.
    Категории могут иметь вложенные категории. У каждого поста и категории присутствуют «хлебные крошки»,
    полный путь со все ми вложенностями, если таковы имеются.

    Приложение readittags. Группирует посты по тэгам, функционирует, как и ожидается.

    Приложение readitcomments. Отвечает за публикация комментариев к постам. Есть возможность оставлять
    ответы по другие комментарии.

    Уведомления (RabbitMQ + Celery):
     * Уведомление модератора об новом сообщении;
     * Уведомление пользователя о том, что он оставил сообщение;
     * Уведомление автора сообщения о том, что другой пользователь ответил на его сообщение.
